const { sql, poolPromise } = require("../../database/db");

exports.UPSERT_CUSTOMER_PO = async (req, res) => {
  try {
    const pool = await poolPromise;
    const result = await pool
      .request()
      .input("PROCESS", sql.VarChar, req.body.PROCESS)
      .input("CPOM_CODE", sql.Int, req.body.CPOM_CODE)
      .input("CPOM_P_CODE", sql.Int, req.body.CPOM_P_CODE)
      .input("CPOM_PONO", sql.VarChar, req.body.CPOM_PONO)
      .input("CPOM_DOC_NO", sql.Int, req.body.CPOM_DOC_NO)
      .input("CPOM_TYPE", sql.Int, req.body.CPOM_TYPE)
      .input("CPOM_DATE", sql.DateTime, req.body.CPOM_DATE)
      .input("CPOM_CR_DAYS", sql.Int, req.body.CPOM_CR_DAYS)
      .input("CPOM_CM_COMP_ID", sql.Int, req.body.CPOM_CM_COMP_ID)
      .input("MODIFY", sql.Int, req.body.MODIFY)
      .input("ES_DELETE", sql.Int, req.body.MODIFY)
      .input("CPOM_PAY_TERM", sql.Int, req.body.CPOM_PAY_TERM)
      .input("CPOM_AUTH_FLG", sql.Int, req.body.CPOM_AUTH_FLG)
      .input("CPOM_QE_CODE", sql.Int, req.body.CPOM_QE_CODE)
      .input("CPOM_T_NAME", sql.Int, req.body.CPOM_T_NAME)
      .input("CPOM_T_PER", sql.Int, req.body.CPOM_T_PER)
      .input("CPOM_T_AMT", sql.Int, req.body.CPOM_T_AMT)
      .input("CPOM_BASIC_AMT", sql.Int, req.body.CPOM_BASIC_AMT)
      .input("CPOM_DISCOUNT_PER", sql.Int, req.body.CPOM_DISCOUNT_PER)
      .input("CPOM_DISCOUNT_AMT", sql.Int, req.body.CPOM_DISCOUNT_AMT)
      .input("CPOM_DISCOUNT_REASON", sql.Int, req.body.CPOM_DISCOUNT_REASON)
      .input("CPOM_DEVIATION_AMT", sql.Int, req.body.CPOM_DEVIATION_AMT)
      .input("CPOM_DEVIATION_REASON", sql.Int, req.body.CPOM_DEVIATION_REASON)
      .input("CPOM_PACKING_AMT", sql.Int, req.body.CPOM_PACKING_AMT)
      .input("CPOM_EXC_PER", sql.Int, req.body.CPOM_EXC_PER)
      .input("CPOM_EXC_EDU_PER", sql.Int, req.body.CPOM_EXC_EDU_PER)
      .input("CPOM_EXC_HEDU_PER", sql.Int, req.body.CPOM_EXC_HEDU_PER)
      .input("CPOM_EXC_AMT", sql.Int, req.body.CPOM_EXC_AMT)
      .input("CPOM_ROUNDING", sql.Int, req.body.CPOM_ROUNDING)
      .input("CPOM_GRAND_TOT", sql.Int, req.body.CPOM_GRAND_TOT)
      .input("CPOM_INV_FLAG", sql.Int, req.body.CPOM_INV_FLAG)
      .input("CPOM_FINAL_DEST", sql.Int, req.body.CPOM_FINAL_DEST)
      .input("CPOM_PRE_CARR_BY", sql.Int, req.body.CPOM_PRE_CARR_BY)
      .input("CPOM_PORT_LOAD", sql.Int, req.body.CPOM_PORT_LOAD)
      .input("CPOM_PORT_DIS", sql.Int, req.body.CPOM_PORT_DIS)
      .input("CPOM_PLACE_DEL", sql.Int, req.body.CPOM_PLACE_DEL)
      .input("CPOM_BUYER_NAME", sql.Int, req.body.CPOM_BUYER_NAME)
      .input("CPOM_BUYER_ADD", sql.Int, req.body.CPOM_BUYER_ADD)
      .input("CPOM_CURR_CODE", sql.Int, req.body.CPOM_CURR_CODE)
      .input("CPOM_WORK_ODR_NO", sql.Int, req.body.CPOM_WORK_ODR_NO)
      .input("CPOM_PO_DATE", sql.Int, req.body.CPOM_PO_DATE)
      .input("CPOM_AM_COUNT", sql.Int, req.body.CPOM_AM_COUNT)
      .input("CPOM_AM_DATE", sql.Int, req.body.CPOM_AM_DATE)
      .input("CPOM_INQ_CODE", sql.Int, req.body.CPOM_INQ_CODE)
      .input("CPOM_IS_VERBAL", sql.Int, req.body.CPOM_IS_VERBAL)
      .input("CPOM_PROJECT_CODE", sql.Int, req.body.CPOM_PROJECT_CODE)
      .input("CPOM_PROJECT_NAME", sql.Int, req.body.CPOM_PROJECT_NAME)
      .input("CPOM_NO", sql.Int, req.body.CPOM_NO)
      .input("CPOM_FREIGHT_CHARGES", sql.Int, req.body.CPOM_FREIGHT_CHARGES)
      .input("CPOM_DOC_NAME", sql.Int, req.body.CPOM_DOC_NAME)
      .output("PK_CODE", sql.Numeric)
      .output("ERROR", sql.VarChar)
      .execute("UPSERT_CUSTOMER_PO");
    res.status(200).json(result.recordset[0]);
  } catch (error) {
    res.send(error.message);
  }
};
